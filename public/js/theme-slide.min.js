"use strict";
function ownKeys(t, e) {
    var a = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(t);
        e && (r = r.filter(function(e) {
            return Object.getOwnPropertyDescriptor(t, e).enumerable
        })),
        a.push.apply(a, r)
    }
    return a
}
function _objectSpread(t) {
    for (var e = 1; e < arguments.length; e++) {
        var a = null != arguments[e] ? arguments[e] : {};
        e % 2 ? ownKeys(Object(a), !0).forEach(function(e) {
            _defineProperty(t, e, a[e])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(a)) : ownKeys(Object(a)).forEach(function(e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(a, e))
        })
    }
    return t
}
function _defineProperty(e, t, a) {
    return t in e ? Object.defineProperty(e, t, {
        value: a,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = a,
    e
}
function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
        return typeof e
    }
    : function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }
    )(e)
}
!function(t) {
    var e = {
        init: function() {
            
            e.carousel()
            
        },
        
        carousel: function() {
            !function(e, t, a) {
                for (var r = 0; r < e.length; r++)
                    t.call(a, r, e[r])
            }(document.querySelectorAll(".cs-carousel .cs-carousel-inner"), function(e, t) {
                var a, r = {
                    container: t,
                    controlsText: ['<i class="fe-arrow-left"></i>', '<i class="fe-arrow-right"></i>'],
                    navPosition: "top",
                    controlsPosition: "top",
                    mouseDrag: !0,
                    speed: 600,
                    autoplayHoverPause: !0,
                    autoplayButtonOutput: !1
                };
                null != t.dataset.carouselOptions && (a = JSON.parse(t.dataset.carouselOptions));
                var n = _objectSpread(_objectSpread({}, r), a)
                  , o = tns(n)
                  , s = t.closest(".cs-carousel")
                  , c = s.querySelectorAll(".tns-item")
                  , l = s.querySelector(".cs-carousel-pager");
                if (null != l) {
                    for (var i = l.querySelectorAll("[data-goto]"), d = 0; d < i.length; d++)
                        i[d].addEventListener("click", function(e) {
                            o.goTo(this.dataset.goto - 1),
                            e.preventDefault()
                        });
                    o.events.on("indexChanged", function() {
                        for (var e = o.getInfo(), t = 0; t < i.length; t++)
                            i[t].classList.remove("active");
                        l.querySelector('[data-goto="' + e.displayIndex + '"]').classList.add("active")
                    })
                }
                var u = s.querySelector(".cs-carousel-label");
                if (null != u && o.events.on("indexChanged", function() {
                    var e = o.getInfo()
                      , t = c[e.index].dataset.carouselLabel;
                    u.innerHTML = t
                }),
                null !== s.querySelector(".cs-carousel-progress")) {
                    var f = o.getInfo()
                      , v = s.querySelector(".cs-current-slide")
                      , p = s.querySelector(".cs-total-slides")
                      , h = s.querySelector(".cs-carousel-progress .progress-bar");
                    v.innerHTML = f.displayIndex,
                    p.innerHTML = f.slideCount,
                    h.style.width = f.displayIndex / f.slideCount * 100 + "%",
                    o.events.on("indexChanged", function() {
                        var e = o.getInfo();
                        v.innerHTML = e.displayIndex,
                        h.style.width = e.displayIndex / e.slideCount * 100 + "%"
                    })
                }
            })
        },
        
    };
    e.init()
}(jQuery);
